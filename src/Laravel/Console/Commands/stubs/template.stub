/**
 * 替换变量说明
 *
 * $model               模型名称                user
 * $model_plural        模型名称复数              users
 * $model_uc_first      模型名称首字母大写       User
 * $model_name  模型中文名               用户
 * $module
 */


!startroutes={{-$model-}}.php
<?php

Route::get ('/{{-$model_plural-}}', '{{-$model_uc_first-}}Controller@index')->name ('{{-$model-}}.index');
Route::get ('/{{-$model_plural-}}/list', '{{-$model_uc_first-}}Controller@list')->name ('{{-$model-}}.list');
Route::get ('/{{-$model_plural-}}/create', '{{-$model_uc_first-}}Controller@create')->name ('{{-$model-}}.create');
Route::post ('/{{-$model_plural-}}', '{{-$model_uc_first-}}Controller@save')->name ('{{-$model-}}.save');
Route::get ('/{{-$model_plural-}}/{id}/detail', '{{-$model_uc_first-}}Controller@detail')->name ('{{-$model-}}.detail');
Route::get ('/{{-$model_plural-}}/{id}/edit', '{{-$model_uc_first-}}Controller@edit')->name ('{{-$model-}}.edit');
Route::put ('/{{-$model_plural-}}/{id}', '{{-$model_uc_first-}}Controller@update')->name ('{{-$model-}}.update');
Route::delete ('/{{-$model_plural-}}/{id}', '{{-$model_uc_first-}}Controller@delete')->name ('{{-$model-}}.delete');
!endroutes

!startviews={{-$model-}}/index.blade.php
@extends('admin.base')

@section('content')
    @include('admin.breadcrumb')

    <div class="layui-card">
        <div class="layui-form layui-card-header light-search" style="height: auto">
            <form>
                <input type="hidden" name="action" value="search">
            @include ('admin.searchField', ['data' => {{-$module-namespace-}}\{{-$module_uc_first-}}\Model\Admin\{{-$model_uc_first-}}::$searchField])
            <div class="layui-inline">
                <label class="layui-form-label">创建日期</label>
                <div class="layui-input-inline">
                    <input type="text" name="created_at" class="layui-input" id="created_at" value="{{ request ()->get ('created_at') }}">
                </div>
            </div>
            <div class="layui-inline">
                <button class="layui-btn layuiadmin-btn-list" lay-filter="form-search" id="submitBtn">
                    <i class="layui-icon layui-icon-search layuiadmin-button-btn"></i>
                </button>
            </div>
            </form>
        </div>
        <div class="layui-card-body">
            <table class="layui-table" lay-data="{url:'{{ route ('admin::' . module_route_prefix ('.') . '{{-$module-}}.{{-$model-}}.list') }}?{{ request ()->getQueryString () }}', page:true, limit:50, id:'test', toolbar:'<div><a href=\'{{ route ('admin::' . module_route_prefix ('.') . '{{-$module-}}.{{-$model-}}.create') }}\'><i class=\'layui-icon layui-icon-add-1\'></i>新增{{-$model_name-}}</a></div>'}" lay-filter="table">
                <thead>
                <tr>
                    <th lay-data="{field:'id', width:80, sort: true, event: 'detail', style:'cursor: pointer;'}">ID</th>
                    @include ('admin.listHead', ['data' => {{-$module-namespace-}}\{{-$module_uc_first-}}\Model\Admin\{{-$model_uc_first-}}::$listField])
                    <th lay-data="{field:'created_at'}">添加时间</th>
                    <th lay-data="{field:'updated_at'}">更新时间</th>
                    <th lay-data="{width:200, templet:'#action'}">操作</th>
                </tr>
                </thead>
            </table>
        </div>
    </div>
@endsection
<script type="text/html" id="action">
    <a href="<% d.editUrl %>" class="layui-table-link" title="编辑"><i class="layui-icon layui-icon-edit"></i></a>
    <a href="javascript:;" class="layui-table-link" title="删除" style="margin-left: 10px" onclick="delete{{-$model_uc_first-}} ('<% d.deleteUrl %>')"><i class="layui-icon layui-icon-delete"></i></a>
</script>

@section('js')
    <script>
        var laytpl = layui.laytpl;
        laytpl.config ({
            open: '<%',
            close: '%>'
        });

        var laydate = layui.laydate;
        laydate.render ({
            elem: '#created_at',
            range: '~'
        });

        function delete{{-$model_uc_first-}} (url) {
            layer.confirm ('确定删除？', function (index){
                $.ajax({
                    url: url,
                    data: {'_method': 'DELETE'},
                    success: function (result) {
                        if (result.code !== 0) {
                            layer.msg(result.msg, {shift: 6});
                            return false;
                        }
                        layer.msg (result.msg, {icon: 1}, function () {
                            if (result.reload) {
                                location.reload ();
                            }
                            if (result.redirect) {
                                location.href = '{!! url ()->previous () !!}';
                            }
                        });
                    }
                });

                layer.close (index);
            });
        }

        layui.use ('table', function () {
            var table = layui.table;
            table.on ('tool(table)', function (obj){
                var data = obj.data;
                if(obj.event === 'detail') {
                    showDetail (data.detailUrl, '{{-$model_name-}}详情')
                }
            });
            table.on ('rowDouble(table)', function (obj) {
                var data = obj.data;

                window.location.href = data.editUrl;

            });
        });
    </script>
@endsection
!endviews

!startviews={{-$model-}}/add.blade.php
@extends('admin.base')

@section('content')
    <div class="layui-card">

        @include('admin.breadcrumb')

        <div class="layui-card-body">
            <form class="layui-form" action="@if (isset ($id)){{ route ('admin::' . module_route_prefix ('.') . '{{-$module-}}.{{-$model-}}.update', ['id' => $id]) }}@else{{ route ('admin::' . module_route_prefix ('.') . '{{-$module-}}.{{-$model-}}.save') }}@endif" method="post">
                @if(isset($id)) {{ method_field('PUT') }} @endif
                <div class="layui-form-item">
                    <label class="layui-form-label">名称</label>
                    <div class="layui-input-block">
                        <input type="text" name="name" required  lay-verify="required" autocomplete="off" class="layui-input" value="{{ $model->name ?? ''  }}">
                    </div>
                </div>
                <div class="layui-form-item">
                    <label class="layui-form-label">描述</label>
                    <div class="layui-input-block">
                        <textarea name="description" autocomplete="off" class="layui-textarea">{{ $model->description ?? ''  }}</textarea>
                    </div>
                </div>
                <div class="layui-form-item">
                    <div class="layui-input-block">
                        <button class="layui-btn" lay-submit lay-filter="form{{-$model_uc_first-}}" id="submitBtn">提交</button>
                        <button type="reset" class="layui-btn layui-btn-primary">重置</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
@endsection

@section('js')
    <script>
        var form = layui.form;

        //监听提交
        form.on ('submit(form{{-$model_uc_first-}})', function (data){
            window.form_submit = $ ('#submitBtn');
            form_submit.prop ('disabled', true);
            $.ajax ({
                url: data.form.action,
                data: data.field,
                success: function (result) {
                    if (result.code !== 0) {
                        form_submit.prop ('disabled', false);
                        layer.msg (result.msg, {shift: 6});
                        return false;
                    }
                    layer.msg (result.msg, {icon: 1}, function () {
                        if (result.reload) {
                            location.reload ();
                        }
                        if (result.redirect) {
                            location.href = '{!! url ()->previous () !!}';
                        }
                    });
                }
            });

            return false;
        });
    </script>
@endsection
!endviews

!startrepository=Admin/BaseRepository.php
<?php
/**
 * @author  Allen <ali@goodcatch.cn>
 */

namespace {{-$module-namespace-}}\{{-$module_uc_first-}}\Repositories\Admin;

use Goodcatch\Modules\Lightcms\Repositories\BaseRepository as Repository;

class BaseRepository extends Repository
{


}

!endrepository


!startrepository=Admin/{{-$model_uc_first-}}Repository.php
<?php
/**
 * @author  Allen <ali@goodcatch.cn>
 */

namespace {{-$module-namespace-}}\{{-$module_uc_first-}}\Repositories\Admin;

use {{-$module-namespace-}}\{{-$module_uc_first-}}\Model\Admin\{{-$model_uc_first-}};

class {{-$model_uc_first-}}Repository extends BaseRepository
{

    public static function list ($perPage, $condition = [], $keyword = null)
    {
        $data = {{-$model_uc_first-}}::query ()
            ->where (function ($query) use ($condition, $keyword) {
                self::buildQuery ($query, $condition);
                if (! empty ($keyword))
                {
                    self::buildSelect ($query, $condition, $keyword);
                }
            })
            ->orderBy ('id', 'desc')
            ->paginate ($perPage);
        $data->transform (function ($item) {
            $item->editUrl = route ('admin::' . module_route_prefix ('.') . '{{-$module-}}.{{-$model-}}.edit', ['id' => $item->id]);
            $item->deleteUrl = route ('admin::' . module_route_prefix ('.') . '{{-$module-}}.{{-$model-}}.delete', ['id' => $item->id]);
            $item->detailUrl = route ('admin::' . module_route_prefix ('.') . '{{-$module-}}.{{-$model-}}.detail', ['id' => $item->id]);
            return $item;
        });

        return [
            'code' => 0,
            'msg' => '',
            'count' => $data->total (),
            'data' => $data->items (),
        ];
    }

    public static function add ($data)
    {
        return {{-$model_uc_first-}}::query ()->create ($data);
    }

    public static function update ($id, $data)
    {
        return {{-$model_uc_first-}}::find ($id)->update ($data);
    }

    public static function find ($id)
    {
        return {{-$model_uc_first-}}::query ()->find ($id);
    }

    public static function delete ($id)
    {
        return {{-$model_uc_first-}}::destroy ($id);
    }
}
!endrepository


!startrequest=Admin/BaseRequest.php
<?php
/**
 * @author  Allen <ali@goodcatch.cn>
 */

namespace {{-$module-namespace-}}\{{-$module_uc_first-}}\Http\Requests\Admin;

use Goodcatch\Modules\Laravel\Http\Requests\CommonFormRequest as FormRequest;

class BaseRequest extends FormRequest
{

    /**
     * Get the validator instance for the request.
     *
     * @return \Illuminate\Contracts\Validation\Validator
     */
    protected function getValidatorInstance ()
    {
        $validator = parent::getValidatorInstance ();
        $validator->addCustomAttributes (__ ('{{-$module-}}::validation.attributes'));
        $validator->setCustomMessages (__ ('{{-$module-}}::validation.custom'));
        $validator->addCustomValues (__ ('{{-$module-}}::validation.values'));
        return $validator;
    }


}

!endrequest


!startrequest=Admin/{{-$model_uc_first-}}Request.php
<?php
/**
 * @author  Allen <ali@goodcatch.cn>
 */

namespace {{-$module-namespace-}}\{{-$module_uc_first-}}\Http\Requests\Admin;

use {{-$module-namespace-}}\{{-$module_uc_first-}}\Model\Admin\{{-$model_uc_first-}};
use Illuminate\Validation\Rule;

class {{-$model_uc_first-}}Request extends BaseRequest
{

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules ()
    {
        $status_in = [
            {{-$model_uc_first-}}::STATUS_DISABLE,
            {{-$model_uc_first-}}::STATUS_ENABLE,
        ];
        return [
            'name' => 'required|max:50',
            'description' => 'max:255',
            'status' => [
                Rule::in ($status_in),
            ],
        ];
    }
}
!endrequest


!startcontroller=Admin/{{-$model_uc_first-}}Controller.php
<?php
/**
 * @author  Allen <ali@goodcatch.cn>
 */

namespace {{-$module-namespace-}}\{{-$module_uc_first-}}\Http\Controllers\Admin;

use Goodcatch\Modules\Lightcms\Http\Controllers\Controller;
use {{-$module-namespace-}}\{{-$module_uc_first-}}\Http\Requests\Admin\{{-$model_uc_first-}}Request;
use {{-$module-namespace-}}\{{-$module_uc_first-}}\Repositories\Admin\{{-$model_uc_first-}}Repository;
use Illuminate\Database\QueryException;
use Illuminate\Http\Request;
use Illuminate\Support\Str;
use Illuminate\View\View;

class {{-$model_uc_first-}}Controller extends Controller
{
    protected $formNames = ['name', 'description'];

    public function __construct ()
    {
        parent::__construct ();

        $this->breadcrumb [] = ['title' => '{{-$model_name-}}列表', 'url' => route ('admin::' . module_route_prefix ('.') . '{{-$module-}}.{{-$model-}}.index')];
    }

    /**
     * {{-$model_name-}}管理-{{-$model_name-}}列表
     *
     */
    public function index ()
    {
        $this->breadcrumb [] = ['title' => '{{-$model_name-}}列表', 'url' => ''];
        return view ('{{-$module-}}::admin.{{-$model-}}.index', ['breadcrumb' => $this->breadcrumb]);
    }

    /**
     * {{-$model_name-}}管理-{{-$model_name-}}列表数据接口
     *
     * @param Request $request
     * @return array
     */
    public function list (Request $request)
    {
        $perPage = (int) $request->get ('limit', 50);
        $condition = $request->only ($this->formNames);

        $data = {{-$model_uc_first-}}Repository::list ($perPage, $condition, $request->keyword);

        return $data;
    }

    /**
     * {{-$model_name-}}管理-新增{{-$model_name-}}
     *
     */
    public function create ()
    {
        $this->breadcrumb [] = ['title' => '新增{{-$model_name-}}', 'url' => ''];
        return view ('{{-$module-}}::admin.{{-$model-}}.add', ['breadcrumb' => $this->breadcrumb]);
    }

    /**
     * {{-$model_name-}}管理-{{-$model_name-}}详情
     *
     */
    public function detail ($id)
    {
        return view ('admin.detail', ['model' => {{-$model_uc_first-}}Repository::find ($id)]);
    }

    /**
     * {{-$model_name-}}管理-保存{{-$model_name-}}
     *
     * @param {{-$model_uc_first-}}Request $request
     * @return array
     */
    public function save ({{-$model_uc_first-}}Request $request)
    {
        try {
            {{-$model_uc_first-}}Repository::add ($request->only ($this->formNames));
            return [
                'code' => 0,
                'msg' => '新增成功',
                'redirect' => true
            ];
        } catch (QueryException $e) {
            return [
                'code' => 1,
                'msg' => '新增失败：' . (Str::contains ($e->getMessage (), 'Duplicate entry') ? '当前{{-$model_name-}}已存在' : '其它错误'),
                'redirect' => false
            ];
        }
    }

    /**
     * {{-$model_name-}}管理-编辑{{-$model_name-}}
     *
     * @param int $id
     * @return View
     */
    public function edit ($id)
    {
        $this->breadcrumb [] = ['title' => '编辑{{-$model_name-}}', 'url' => ''];

        $model = {{-$model_uc_first-}}Repository::find ($id);
        return view ('{{-$module-}}::admin.{{-$model-}}.add', ['id' => $id, 'model' => $model, 'breadcrumb' => $this->breadcrumb]);
    }

    /**
     * {{-$model_name-}}管理-更新{{-$model_name-}}
     *
     * @param {{-$model_uc_first-}}Request $request
     * @param int $id
     * @return array
     */
    public function update ({{-$model_uc_first-}}Request $request, $id)
    {
        $data = $request->only ($this->formNames);
        try {
            {{-$model_uc_first-}}Repository::update ($id, $data);
            return [
                'code' => 0,
                'msg' => '编辑成功',
                'redirect' => true
            ];
        } catch (QueryException $e) {
            return [
                'code' => 1,
                'msg' => '编辑失败：' . (Str::contains ($e->getMessage (), 'Duplicate entry') ? '当前{{-$model_name-}}已存在' : '其它错误'),
                'redirect' => false
            ];
        }
    }

    /**
     * {{-$model_name-}}管理-删除{{-$model_name-}}
     *
     * @param int $id
     * @return array
     */
    public function delete ($id)
    {
        try {
            {{-$model_uc_first-}}Repository::delete ($id);
            return [
                'code' => 0,
                'msg' => '删除成功',
                'redirect' => route ('admin::' . module_route_prefix ('.') . '{{-$module-}}.{{-$model-}}.index')
            ];
        } catch (\RuntimeException $e) {
            return [
                'code' => 1,
                'msg' => '删除失败：' . $e->getMessage (),
                'redirect' => false
            ];
        }
    }

}
!endcontroller

!startmodel=Admin/Model.php
<?php
/**
 * @author  Allen <ali@goodcatch.cn>
 */

namespace {{-$module-namespace-}}\{{-$module_uc_first-}}\Model\Admin;

use Goodcatch\Modules\Lightcms\Model\Admin\Model as BaseModel;

abstract class Model extends BaseModel
{

    /**
     * @var string module table with prefix
     */
    protected function getModuleTablePrefix () {
        return '{{-$module-}}_';
    }

}
!endmodel

!startmodel=Admin/{{-$model_uc_first-}}.php
<?php
/**
 * @author  Allen <ali@goodcatch.cn>
 */

namespace {{-$module-namespace-}}\{{-$module_uc_first-}}\Model\Admin;

class {{-$model_uc_first-}} extends Model
{
    const STATUS_ENABLE = 1;
    const STATUS_DISABLE = 0;

    protected $guarded = [];

    /**
     * 搜索字段
     *
     * @var array
     */
    public static $searchField = [
        'name' => '名称',
        'description' => '描述'
    ];

    /**
     * 列表字段
     *
     * @var array
     */
    public static $listField = [
        'name' => [
            'title' => '名称',
            'width' => 120,
            'sort' => true
        ],
        'description' => [
            'title' => '描述',
            'width' => 150
        ]

    ];
}
!endmodel